name: PR CI

on:
  pull_request:
    types: [opened, edited, synchronize, reopened, ready_for_review]
    branches: [main]

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: pr-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pr-title-conventional:
    name: PR title follows Conventional Commits
    runs-on: ubuntu-latest
    steps:
      - uses: amannn/action-semantic-pull-request@v5
        with:
          types:  |
            build
            chore
            ci
            docs
            feat
            fix
            perf
            refactor
            revert
            style
            test
          requireScope: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  commits-conventional:
    name: Commits follow Conventional Commits
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - name: Lint commit messages
        uses: wagoid/commitlint-github-action@v6
        with:
          configFile: .github/commitlint.config.cjs

  build-test:
    name: Format, Test, Coverage
    runs-on: ubuntu-latest
    needs: [pr-title-conventional, commits-conventional]
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      # Supply-chain: verify Gradle wrapper integrity
      - uses: gradle/wrapper-validation-action@v2

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - uses: gradle/gradle-build-action@v3

      # Enforce -SNAPSHOT on PRs (keeps release versions out of branches)
      - name: Enforce -SNAPSHOT version on PRs
        run: |
          V=$(grep '^version=' gradle.properties | cut -d'=' -f2 | tr -d '[:space:]')
          case "$V" in
            *-SNAPSHOT) echo "OK: $V";;
            *) echo "On PRs, version must include -SNAPSHOT (found: $V)"; exit 1;;
          esac

      # Same-repo PRs: auto-apply Spotless and push; forks: check only
      - name: Spotless apply (same-repo PRs)
        if: ${{ github.event.pull_request.head.repo.fork == false }}
        run: |
          ./gradlew --no-daemon spotlessApply
          if ! git diff --quiet; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "chore(format): apply Spotless"
            git push
          fi

      - name: Spotless check (forks)
        if: ${{ github.event.pull_request.head.repo.fork == true }}
        run: ./gradlew --no-daemon spotlessCheck

      - name: Unit tests (all modules)
        run: ./gradlew --no-daemon test

      - name: Coverage (merged) + gate
        run: ./gradlew --no-daemon jacocoRootReport jacocoRootCoverageVerification

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: |
            build/reports/jacoco/**    
            **/build/reports/jacoco/test/**
