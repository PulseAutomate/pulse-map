# .github/workflows/ci.yml
# This workflow runs on every pull request to ensure code quality.
# It enforces conventional commit messages on the PR title AND every commit within the PR.
# It also automatically formats the code and runs the build and tests.

name: CI

on:
  pull_request:
    branches: [ "**" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Lint Pull Request
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          validateAllCommits: true
          types: |
            feat
            fix
            docs
            style
            refactor
            test
            chore
            ci

      - name: Validate Gradle Wrapper
        if: github.event_name == 'pull_request'
        uses: gradle/wrapper-validation-action@v2
        continue-on-error: true
        timeout-minutes: 3

      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Gradle (with caching)
        uses: gradle/actions/setup-gradle@v3

      - name: Spotless Apply
        run: ./gradlew spotlessApply --no-daemon

      - name: Commit Spotless changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "style: apply automatic formatting"
          branch: ${{ github.head_ref }}

      - name: Build and Test
        run: ./gradlew build --no-daemon

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            **/build/test-results/test
            **/build/reports/tests/test
          if-no-files-found: ignore